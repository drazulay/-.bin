#! /usr/bin/env bash

PATH="/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin:${HOME}/.composer/vendor/bin"
export PATH

set -e

VERSION="$1"; shift
MAGERUN=$(which n98-magerun2)
VER=81
PHP=""
USE_VERSION="8.1"
LOCK_FILE="${HOME}/.bin/magerun2-php.lock"

echo 0 | tee ${LOCK_FILE} 2>&1 > /dev/null

STATE=$(cat ${LOCK_FILE})

[ -z "${MAGERUN}" ] && echo "n98-magerun2: command not found." && exit 1

[ ${STATE} -eq 1 ] || echo 1 | tee ${LOCK_FILE} 2>&1 > /dev/null

declare -a VERSIONS=("5.6" "7.0" "7.1" "7.2" "7.3" "7.4" "8.0" "8.1")

# Check if the given version exists
for VER in "${VERSIONS[@]}"; do
	if [ "${VER}" == "${VERSION}" ]; then
		USE_VERSION="${VER}"
		PHP="/usr/local/opt/php@${USE_VERSION}/bin/php"
		break
	fi
done

if [ -z "${PHP}" ]; then
	echo "Invalid PHP version: ${VERSION}, exiting.."
	exit 1
fi

FORMULA="shivammathur/php/php@${USE_VERSION}"

echo "Checking if ${FORMULA} is installed.."
if [ ${STATE} -eq 1 ]; then
	if [ $(brew info --quiet "${FORMULA}" | grep -c 'Not installed') -eq 1 ]]; then
		echo "The Homebrew formula ${FORMULA} is not installed."
		
		# Maybe install the package?
		read -p "Would you like to attempt to install ${FORMULA} from Homebrew? (N/y)" INSTALL
		if ([ "${INSTALL}" == "y" ] || [ "${INSTALL}" == "Y" ]); then
			echo "Installing ${FORMULA} from Homebrew.."
			brew install --quiet "${FORMULA}"
		fi

		# Install succeeded?
		echo "Checking if ${FORMULA} installation succeeded.."
		if [ $(brew info --quiet "${FORMULA}" | grep -c 'Not installed') -eq 1 ]; then
			echo "Could not install ${FORMULA}, exiting.."
			echo 1 | tee ${LOCK_FILE} 2>&1 > /dev/null
			exit 2
		fi
		echo 2 | tee ${LOCK_FILE} 2>&1 > /dev/null
	fi
else
	echo "${FORMULA} is installed."
fi


# Maybe link the package?
echo "Checking Homebrew symlinks.."
if [ ${STATE} -eq 2 ] || [ ! -e "${PHP}" ]; then
	read -p "The binary ${PHP} was not found. Would you like to link the PHP binaries from ${FORMULA}? (N/y)" LINK

	if ([ "${LINK}" == "y" ] || [ "${LINK}" == "Y" ]); then
		brew link --overwrite "${FORMULA}"

		if [ ! -e "${PHP}" ]; then
			echo "${PHP} still doesn't exist, which means we couldn't link the PHP binaries and cannot run PHP ${USE_VERSION}}, exiting.."
			echo 2 | tee ${LOCK_FILE} 2>&1 > /dev/null
			exit 3
		fi
	else
		echo "Can't run the chosen PHP version without it being correctly symlinked. Exiting.."
		echo 2 | tee ${LOCK_FILE} 2>&1 > /dev/null
		exit 4
	fi 
	echo 3 | tee ${LOCK_FILE} 2>&1 > /dev/null
fi

echo ">> Running ${MAGERUN} with ${PHP}"

${PHP} -f "${MAGERUN}" "$@"
